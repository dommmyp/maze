{"ast":null,"code":"var _jsxFileName = \"/Users/dominicparolin/Code/maze/maze-2/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Grid from './components/Grid.js';\nimport Navbar from './components/Navbar.js';\nimport { myGrid, initBoxes } from \"./components/calc.js\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [boxes, setBoxes] = useState([]);\n  setBoxes(initBoxes(boxes));\n\n  // setBoxes(boxes.map((row)=>[]));\n  // for (let i = 0; i < 8; i++) {\n  //   for (let j = 0; j < 8; j++){\n  //     // setBoxes(boxes.map((row)=>((row.id === i) ?  : row)))\n\n  //   }\n\n  // tempArr[i][j] = new BoxClass(i, j);\n  // setGridElement(new BoxClass(i, j), boxes, i, j, setBoxes);\n  // }\n  // setBoxes(tempArr);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), \"hi\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s4hLDv7qD+qe7+ixkHVJtveXRJo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Grid","Navbar","myGrid","initBoxes","useState","App","boxes","setBoxes"],"sources":["/Users/dominicparolin/Code/maze/maze-2/src/App.js"],"sourcesContent":["import './App.css';\nimport Grid from './components/Grid.js'\nimport Navbar from './components/Navbar.js'\nimport {myGrid, initBoxes} from \"./components/calc.js\";\nimport {useState} from 'react';\n\n\nfunction App() {\n\n  const [boxes, setBoxes] = useState([]);\n  setBoxes(initBoxes(boxes));\n\n    // setBoxes(boxes.map((row)=>[]));\n    // for (let i = 0; i < 8; i++) {\n    //   for (let j = 0; j < 8; j++){\n    //     // setBoxes(boxes.map((row)=>((row.id === i) ?  : row)))\n\n\n    //   }\n\n      // tempArr[i][j] = new BoxClass(i, j);\n      // setGridElement(new BoxClass(i, j), boxes, i, j, setBoxes);\n    // }\n  // setBoxes(tempArr);\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <Navbar />\n        hi\n        {/* <Grid boxes={boxes}/> */}\n        {/* <button onClick={() => makeMaze(boxes)}>Make Maze</button> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAAQC,MAAM,EAAEC,SAAS,QAAO,sBAAsB;AACtD,SAAQC,QAAQ,QAAO,OAAO;AAAC;AAG/B,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtCG,QAAQ,CAACJ,SAAS,CAACG,KAAK,CAAC,CAAC;;EAExB;EACA;EACA;EACA;;EAGA;;EAEE;EACA;EACF;EACF;;EAGA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAK,SAAS,EAAC,SAAS;MAAA,wBACtB,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,MAEV;IAAA;MAAA;MAAA;MAAA;IAAA;EAEI;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7BQD,GAAG;AAAA,KAAHA,GAAG;AA+BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}