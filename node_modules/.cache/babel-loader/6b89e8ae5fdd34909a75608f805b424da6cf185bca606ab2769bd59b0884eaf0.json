{"ast":null,"code":"import userEvent from '@testing-library/user-event';\nimport { useState } from 'react';\nexport default class BoxClass {\n  constructor(i, j) {\n    this.left = true;\n    this.right = true;\n    this.top = true;\n    this.bottom = true;\n    this.i = i;\n    this.j = j;\n  }\n}\nexport function setGridElement(newBox, boxes, i, j, setBoxes) {\n  setBoxes(boxes.map(row => row.id === i ? row.map(el => el.id === j ? newBox : el) : row));\n}\n;\nexport const initBoxes = () => {\n  var grid = [];\n  for (let i = 0; i < 10; i++) {\n    grid[i] = [];\n    for (let j = 0; j < 10; j++) {\n      grid[i][j] = new BoxClass(i, j);\n    }\n  }\n  return grid;\n};\nexport const generateMaze = boxes => {\n  let entrance = Math.floor(Math.random() * 10);\n  let exit = Math.floor(Math.random() * 10);\n  let pointsX = [7, 8, 3, 4];\n  let pointsY = [8, 2, 7];\n};","map":{"version":3,"names":["userEvent","useState","BoxClass","constructor","i","j","left","right","top","bottom","setGridElement","newBox","boxes","setBoxes","map","row","id","el","initBoxes","grid","generateMaze","entrance","Math","floor","random","exit","pointsX","pointsY"],"sources":["/Users/dominicparolin/Code/maze/src/components/calc.js"],"sourcesContent":["import userEvent from '@testing-library/user-event';\nimport {useState} from 'react';\n\nexport default class BoxClass {\n  constructor(i, j) {\n    this.left = true;\n    this.right = true;\n    this.top = true;\n    this.bottom = true;\n    this.i = i;\n    this.j = j;\n  }\n}\n\nexport function setGridElement(newBox, boxes, i, j, setBoxes) {\n   setBoxes(boxes.map((row) => (\n      (row.id === i) ?\n         row.map((el) => ( (el.id === j) ? newBox : el))\n      :\n      row\n   ))\n)};\n\n\nexport const initBoxes = () => {\n   var grid = [];\n   for (let i = 0; i < 10; i++) {\n      grid[i]=[];\n      for (let j = 0; j < 10; j++) {\n         grid[i][j] = new BoxClass(i,j);\n      }      \n   }\n   return grid;\n}\n\nexport const generateMaze = (boxes) =>{\n   let entrance = Math.floor(Math.random()*10);\n   let exit = Math.floor(Math.random()*10);\n\n   let pointsX = [7,8,3,4];\n   let pointsY = [8,2,7,]\n\n\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,6BAA6B;AACnD,SAAQC,QAAQ,QAAO,OAAO;AAE9B,eAAe,MAAMC,QAAQ,CAAC;EAC5BC,WAAW,CAACC,CAAC,EAAEC,CAAC,EAAE;IAChB,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,GAAG,GAAG,IAAI;IACf,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACL,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EACZ;AACF;AAEA,OAAO,SAASK,cAAc,CAACC,MAAM,EAAEC,KAAK,EAAER,CAAC,EAAEC,CAAC,EAAEQ,QAAQ,EAAE;EAC3DA,QAAQ,CAACD,KAAK,CAACE,GAAG,CAAEC,GAAG,IACnBA,GAAG,CAACC,EAAE,KAAKZ,CAAC,GACVW,GAAG,CAACD,GAAG,CAAEG,EAAE,IAAQA,EAAE,CAACD,EAAE,KAAKX,CAAC,GAAIM,MAAM,GAAGM,EAAG,CAAC,GAElDF,GACF,CAAC,CACJ;AAAA;AAAC;AAGF,OAAO,MAAMG,SAAS,GAAG,MAAM;EAC5B,IAAIC,IAAI,GAAG,EAAE;EACb,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC1Be,IAAI,CAACf,CAAC,CAAC,GAAC,EAAE;IACV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC1Bc,IAAI,CAACf,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,IAAIH,QAAQ,CAACE,CAAC,EAACC,CAAC,CAAC;IACjC;EACH;EACA,OAAOc,IAAI;AACd,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIR,KAAK,IAAI;EACnC,IAAIS,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,EAAE,CAAC;EAC3C,IAAIC,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,EAAE,CAAC;EAEvC,IAAIE,OAAO,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EACvB,IAAIC,OAAO,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAE;AAGzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}