{"ast":null,"code":"var _jsxFileName = \"/Users/dominicparolin/Code/maze/maze-2/src/components/Grid.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Grid.css\";\nimport { myGrid } from \"./calc.js\";\nimport Box from './Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grid(props) {\n  _s();\n  const arr = props.arr;\n  const [boxes, setBoxes] = useState(myGrid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myGrid\",\n    children: boxes.map(items => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gridLine\",\n        children: items.map(subItem => {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            className: \"gridBox\",\n            children: subItem.i\n          }, subItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this);\n        })\n      }, items.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(Grid, \"RoIYwB3gP88n1RGoOHwEKKrbXcA=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["useState","myGrid","Box","Grid","props","arr","boxes","setBoxes","map","items","subItem","i","id"],"sources":["/Users/dominicparolin/Code/maze/maze-2/src/components/Grid.js"],"sourcesContent":["import {useState} from \"react\";\nimport \"./Grid.css\";\nimport {myGrid} from \"./calc.js\";\nimport Box from './Box'\n\nfunction Grid(props) {\n   const arr = props.arr;\n\n   const [boxes, setBoxes] = useState(myGrid);\n\n    return (\n        <div className=\"myGrid\">\n          {boxes.map((items) => {\n            return (\n              <div className=\"gridLine\" key={items.id}>\n                {items.map((subItem) => {\n                  return (\n                    <Box className=\"gridBox\" key={subItem.id}>\n                      {subItem.i}\n                    </Box>,\n                    <Box />\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n    );\n  }\n\nexport default Grid;\n\n\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAO,YAAY;AACnB,SAAQC,MAAM,QAAO,WAAW;AAChC,OAAOC,GAAG,MAAM,OAAO;AAAA;AAEvB,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EAClB,MAAMC,GAAG,GAAGD,KAAK,CAACC,GAAG;EAErB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACC,MAAM,CAAC;EAEzC,oBACI;IAAK,SAAS,EAAC,QAAQ;IAAA,UACpBK,KAAK,CAACE,GAAG,CAAEC,KAAK,IAAK;MACpB,oBACE;QAAK,SAAS,EAAC,UAAU;QAAA,UACtBA,KAAK,CAACD,GAAG,CAAEE,OAAO,IAAK;UACtB,OACE,qBAAC,GAAG;YAAC,SAAS,EAAC,SAAS;YAAA,UACrBA,OAAO,CAACC;UAAC,GADkBD,OAAO,CAACE,EAAE;YAAA;YAAA;YAAA;UAAA,QAElC,eACN,QAAC,GAAG;YAAA;YAAA;YAAA;UAAA,QAAG;QAEX,CAAC;MAAC,GAR2BH,KAAK,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QASjC;IAEV,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEZ;AAAC,GAvBMT,IAAI;AAAA,KAAJA,IAAI;AAyBb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}